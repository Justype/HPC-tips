Bootstrap: docker
From: nvidia/cuda:12.6.2-devel-ubuntu22.04

%labels
  nvidia/cuda:12.6.2-devel-ubuntu22.04 neovim code-server rstudio-server

%environment
  export LC_ALL=C
  export LANG=C.UTF-8
  export TZ="America/New_York"
  unset which

%runscript
  exec /bin/bash "$@"	

%post
    apt -y update
    apt -y upgrade

    export DEBIAN_FRONTEND=noninteractive
    
    # to change time zone to EST
    export TZ="America/New_York"
    apt install tzdata
    rm -rf /etc/localtime
    cp -rp /usr/share/zoneinfo/EST /etc/localtime

    # common dependencies
    apt -y install build-essential git wget curl nano \
                   zip tree \
                   libtool libtool-bin libicu-dev \
                   g++ gfortran flex bison pkg-config \
                   libx11-dev libxkbfile-dev libsecret-1-dev \
                   ninja-build make cmake doxygen \
                   autoconf automake

    # may want to use python virtual environment
    apt -y install python3-pip python3-venv python-is-python3
    
    # dependencies for pytorch
    apt -y install libglib2.0-0 libsm6 libxrender1 libxext6

    # R build dependencies
    apt install -y gcc g++ gfortran libreadline-dev libx11-dev libxt-dev \
                   libpng-dev libjpeg-dev libcairo2-dev xvfb \
                   libbz2-dev libzstd-dev liblzma-dev libtiff5 \
                   libssh-dev libgit2-dev libcurl4-openssl-dev \
                   libblas-dev liblapack-dev libopenblas-base \
                   zlib1g-dev openjdk-11-jdk screen wget libpcre2-dev make \
                   libpango-1.0-0 libncurses-dev libicu-dev \
                   xauth pkgconf libtirpc-dev libdeflate-dev \
                   texlive-base texlive-latex-base texlive-plain-generic \
                   texlive-fonts-recommended texlive-fonts-extra \
                   texlive-extra-utils texlive-latex-recommended \
                   texlive-latex-extra texinfo

    # R-base
    apt install -y --no-install-recommends software-properties-common dirmngr
    # add the signing key (by Michael Rutter) for these repos
    # To verify key, run gpg --show-keys /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc 
    # Fingerprint: E298A3A825C0D65DFD57CBB651716619E084DAB9
    wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
    # add the R 4.0 repo from CRAN -- adjust 'focal' to 'groovy' or 'bionic' as needed
    add-apt-repository -y "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"

    apt -y install r-base-dev=4.4.1-3.2204.0

    # rstudio-server and dependencies
    apt -y install lib32gcc-s1 lib32stdc++6 libc6-i386 libclang-14-dev \
                   libclang-common-14-dev libclang-dev libclang1-14 \
                   libgc1 libllvm14 libobjc-11-dev libobjc4 libpq5 \
                   libssl-dev lsb-release psmisc sudo
    wget https://download2.rstudio.org/server/jammy/amd64/rstudio-server-2024.09.0-375-amd64.deb
    dpkg -i rstudio-server-2024.09.0-375-amd64.deb
    rm rstudio-server-2024.09.0-375-amd64.deb

    # R packages dependencies
    apt -y install libopenblas-dev libudunits2-dev libgdal-dev libmagick++-dev \
                   libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev \
                   libglpk40 libicu70

    ## libicu70 is not available in Ubuntu 24
    #wget https://launchpad.net/ubuntu/+source/icu/70.1-2/+build/23145450/+files/libicu70_70.1-2_amd64.deb
    #dpkg -i libicu70_70.1-2_amd64.deb
    #rm libicu70_70.1-2_amd64.deb

    ## BCFtools dependencies libgsl
    apt -y install libbz2-dev liblzma-dev libcurl4-gnutls-dev libssl-dev libncurses5-dev libgsl-dev libperl-dev

    # rclone sync tools
    apt -y install rclone

    # neovim
    wget https://github.com/neovim/neovim/releases/download/v0.10.2/nvim-linux64.tar.gz
    tar xf nvim-linux64.tar.gz
    cp -r nvim-linux64/* /usr/local/
    rm -r nvim-linux64*

    # nodejs LTS
    curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - &&\
        apt -y install nodejs

    # code-server
    curl -fsSL https://code-server.dev/install.sh | sh

    # tmux
    apt -y install tmux

    apt clean
